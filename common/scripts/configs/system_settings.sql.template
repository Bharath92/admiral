do $$
  begin
    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings') then
    -- This is the base table, do not add any fields here. Add them below.
      create table "systemSettings" (
        "id" INT PRIMARY KEY NOT NULL,
        "defaultMinionCount" INT DEFAULT 1 NOT NULL,
        "accountSyncFrequencyHr" INT DEFAULT 4 NOT NULL,
        "autoSelectBuilderToken" BOOLEAN DEFAULT false NOT NULL,
        "buildTimeoutMS" INT DEFAULT 3600000 NOT NULL,
        "defaultPrivateJobQuota" INT DEFAULT 150 NOT NULL,
        "serviceUserToken" VARCHAR(36) NOT NULL,
        "runMode" VARCHAR(36) DEFAULT 'production' NOT NULL,
        "allowSystemNodes" BOOLEAN DEFAULT true NOT NULL,
        "allowDynamicNodes" BOOLEAN DEFAULT false NOT NULL,
        "allowCustomNodes" BOOLEAN DEFAULT true NOT NULL,
        "awsAccountId" VARCHAR(12),
        "jobConsoleBatchSize" INTEGER DEFAULT 10 NOT NULL,
        "jobConsoleBufferTimeIntervalMS" INTEGER DEFAULT 3000 NOT NULL,
        "apiRetryIntervalMS" INTEGER DEFAULT 3000 NOT NULL,
        "maxDiskUsagePercentage" INTEGER DEFAULT 90 NOT NULL,
        "rootS3Bucket" VARCHAR(64) NOT NULL,
        "rootGCSBucket" VARCHAR(64) NOT NULL,
        "nodeScriptsLocation" VARCHAR(255) NOT NULL,
        "enforcePrivateJobQuota" BOOLEAN DEFAULT false NOT NULL,
        "technicalSupportAvailable" BOOLEAN DEFAULT false NOT NULL,
        "customNodesAdminOnly" BOOLEAN DEFAULT false NOT NULL,
        "allowedSystemImageFamily" TEXT NOT NULL,
        "releaseVersion" VARCHAR(24) DEFAULT 'master' NOT NULL,
        "services" TEXT,
        "db" TEXT,
        "msg" TEXT,
        "state" TEXT,
        "secrets" TEXT,
        "redis" TEXT,
        "master" TEXT,
        "workers" TEXT,
        "blockedEmails" TEXT,
        "allowedEmails" TEXT,
        "minimumSCMAccountAgeInDays" INT,
        "lastIntercomProjectsScanAt" timestamp with time zone,
        "lastIntercomRSyncScanAt" timestamp with time zone,
        "mktgPageAggsLastDtTm" timestamp with time zone,
        "mktgCTAAggsLastDtTm" timestamp with time zone,
        "defaultMinionInstanceSize" VARCHAR(255),
        "defaultClusterType" VARCHAR(255) NOT NULL DEFAULT 'custom__x86_64__Ubuntu_16.04',
        "maxNodeCheckInDelayInMinutes" INT NOT NULL DEFAULT 15,
        "autoSync" BOOLEAN DEFAULT true NOT NULL,
        "createdAt" timestamp with time zone NOT NULL,
        "updatedAt" timestamp with time zone NOT NULL
      );
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'defaultClusterType') then
      alter table "systemSettings" add column "defaultClusterType" VARCHAR(255) NOT NULL DEFAULT 'custom__x86_64__Ubuntu_16.04';
    end if;

    if exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'hubspotProjectsLastSyncTime') then
      alter table "systemSettings" drop column "hubspotProjectsLastSyncTime";
    end if;

    if exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'hubspotRSyncLastSyncTime') then
      alter table "systemSettings" drop column "hubspotRSyncLastSyncTime";
    end if;

    if exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'hubspotListId') then
      alter table "systemSettings" drop column "hubspotListId";
    end if;

    if exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'hubspotShouldSimulate') then
      alter table "systemSettings" drop column "hubspotShouldSimulate";
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'accountSyncFrequencyHr') then
      alter table "systemSettings" add column "accountSyncFrequencyHr" INTEGER  NOT NULL DEFAULT 4;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'blockedEmails') then
      alter table "systemSettings" add column "blockedEmails" TEXT;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'allowedEmails') then
      alter table "systemSettings" add column "allowedEmails" TEXT;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'minimumSCMAccountAgeInDays') then
      alter table "systemSettings" add column "minimumSCMAccountAgeInDays" INT;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'lastIntercomProjectsScanAt') then
      alter table "systemSettings" add column "lastIntercomProjectsScanAt" TIMESTAMP WITH TIME ZONE;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'lastIntercomRSyncScanAt') then
      alter table "systemSettings" add column "lastIntercomRSyncScanAt" TIMESTAMP WITH TIME ZONE;
    end if;

    if not exists(select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'maxDiskUsagePercentage') then
      alter table "systemSettings" add column "maxDiskUsagePercentage" INTEGER DEFAULT 90 NOT NULL;
    end if;

    if not exists(select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'nodeCacheIntervalMS') then
      alter table "systemSettings" add column "nodeCacheIntervalMS" INTEGER DEFAULT 600000 NOT NULL;
    end if;

    if not exists(select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'nodeStopDayOfWeek') then
      alter table "systemSettings" add column "nodeStopDayOfWeek" INTEGER DEFAULT 0 NOT NULL;
    end if;

    if not exists(select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'nodeStopIntervalDays') then
      alter table "systemSettings" add column "nodeStopIntervalDays" INTEGER DEFAULT 30 NOT NULL;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'maxNodeCheckInDelayInMinutes') then
      alter table "systemSettings" add column "maxNodeCheckInDelayInMinutes" INTEGER DEFAULT 15 NOT NULL;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'autoSync') then
      alter table "systemSettings" add column "autoSync" BOOLEAN DEFAULT true NOT NULL;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'supportEmailAddress') then
      alter table "systemSettings" add column "supportEmailAddress" TEXT;
    end if;

    if exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'truck') then
      alter table "systemSettings" drop column "truck";
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'legacyFileStoreProvider') then
      alter table "systemSettings" add column "legacyFileStoreProvider" TEXT;
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'nodeTypeFileStoreMap') then
      alter table "systemSettings" add column "nodeTypeFileStoreMap" TEXT DEFAULT '{}';
    end if;

    if not exists (select 1 from information_schema.columns where table_name = 'systemSettings' and column_name = 'rootGCSBucket') then
      alter table "systemSettings" add column "rootGCSBucket" VARCHAR(64);
      update "systemSettings" set "rootGCSBucket" = (select "rootS3Bucket" from "systemSettings" limit 1);
      alter table "systemSettings" alter column "rootGCSBucket" set not null;
    end if;
  end
$$;

do $$
  begin
    if not exists (select 1 from "systemSettings" where "id" = 1) then
        insert into "systemSettings"
          (
            "id",
            "serviceUserToken",
            "rootS3Bucket",
            "rootGCSBucket",
            "nodeScriptsLocation",
            "allowedSystemImageFamily",
            "releaseVersion",
            "defaultMinionInstanceSize",
            "supportEmailAddress",
            "createdAt",
            "updatedAt"
          )
        values
          (
            1,
            '',
            '',
            '',
            '/home/shippable/scripts/node',
            'shippable/minv2|drydock/',
            '<%= obj.defaultReleaseVersion %>',
            'c4.large',
            'support@shippable.com',
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
          );
    end if;
  end
$$;
